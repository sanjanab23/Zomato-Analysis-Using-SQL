-- Query 1: Get the total number of orders placed by each user, ordered by the number of orders in descending order
SELECT 
    Users.UserID,
    Users.Username,
    COUNT(Orders.OrderID) AS TotalOrders
FROM 
    Users
JOIN 
    Orders ON Users.UserID = Orders.UserID
GROUP BY 
    Users.UserID, Users.Username
ORDER BY 
    TotalOrders DESC;

-- Query 2: Get the total revenue generated by each restaurant, ordered by revenue in descending order
SELECT 
    Restaurants.RestaurantID,
    Restaurants.Name,
    SUM(OrderDetails.Quantity * OrderDetails.UnitPrice) AS TotalRevenue
FROM 
    Restaurants
JOIN 
    MenuItems ON Restaurants.RestaurantID = MenuItems.RestaurantID
JOIN 
    OrderDetails ON MenuItems.MenuItemID = OrderDetails.MenuItemID
GROUP BY 
    Restaurants.RestaurantID, Restaurants.Name
ORDER BY 
    TotalRevenue DESC;

-- Query 3: Get the average rating of each restaurant, ordered by rating in descending order
SELECT 
    Restaurants.RestaurantID,
    Restaurants.Name,
    AVG(Reviews.Rating) AS AverageRating
FROM 
    Restaurants
LEFT JOIN 
    Reviews ON Restaurants.RestaurantID = Reviews.RestaurantID
GROUP BY 
    Restaurants.RestaurantID, Restaurants.Name
ORDER BY 
    AverageRating DESC;

-- Query 4: Get the number of orders placed in each city, ordered by the number of orders in descending order
SELECT 
    Addresses.City,
    COUNT(Orders.OrderID) AS TotalOrders
FROM 
    Addresses
JOIN 
    Users ON Addresses.UserID = Users.UserID
JOIN 
    Orders ON Users.UserID = Orders.UserID
GROUP BY 
    Addresses.City
ORDER BY 
    TotalOrders DESC;

-- Query 5: Get the number of users who joined in each year, ordered by year in ascending order
SELECT 
    EXTRACT(YEAR FROM JoinDate) AS JoinYear,
    COUNT(UserID) AS NewUsers
FROM 
    Users
GROUP BY 
    JoinYear
ORDER BY 
    JoinYear ASC;
